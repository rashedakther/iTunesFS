2008-03-11  Marcus Mueller  <znek@mulle-kybernetik.com>

	* NOTE: THIS BUILD DOESN'T WORK, YET.
	  It's a necessary rewrite for the now official ObjC API,
	  however it's not finished (and not polished)

	* FUSEObjC: removed external dependency, as this was removed from
	  googlecode.

	* main.m: added new main() method, this will start AppKit's runloop
	  like any other AppKit based application.

	* iTunesFileSystem.m: changed to new API

	* FUSEOFS/NSObject+FUSEOFS.[hm]: changed icon API

	* FUSEOFS/FUSEObjectFileSystem.[hm]: according to new API this no
	  longer subclasses from FUSEFileSystem but is now a delegate to
	  GMUserFileSystem. There is quite a lot to be done still and several
	  places need to be revisited.
	  
	* English.lproj/MainMenu.nib: changed to new object model

	* iTunesLibrary.[hm]: changed icon API, see FUSEOFS/NSObject+FUSEOFS

	* JBiPodLibrary.m: added a comment, need to address this

	* iTunesFSController.[hm]: new application delegate, needs work (i.e.
	  defaults need to be fetched dynamically, FS initializer is pretty
	  ugly)

	* common.h: we need Appkit now

2008-01-09  Dan Villiom Podlaski Christiansen  <dan@villiom.dk>

	* README: updated for new defaults 'AutoOpenInFinder' and
	  'UseBurnFoldersInFinder'

	* FUSEOFS/FUSEObjectFileSystem.m: properly set the volicon fuse option
	  if we have a custom icon for the filesystem

	* iTunesLibrary.h: expose burn folder helper methods to subclassers

	* iTunesLibrary.m, iPodLibrary.m: properly set burn folder names if the
	  default is set to YES

	* iTunesFS.xcodeproj/project.pbxproj: removed redundant variables,
	  use standard way to choose C99

	* Info.plist: set the default value (YES) for new 'AutoOpenInFinder'
	  user default

2008-01-07  Marcus Mueller  <znek@mulle-kybernetik.com>

	* iPodLibrary.m: forgot to set "Track Number" properly, reported by
	  Tim Fitzgerald

	* *.*: updated copyright information for 2008

2007-12-31  Marcus Mueller  <znek@mulle-kybernetik.com>

	* v1.1.6

	* README: updated, added proper MacFUSE Core versions

	* iTunesFileSystem.m: added "NoITunes" default, preventing iTunes
	  library from being displayed (feature request by Iacopo Cacciaguerra)

2007-12-27  Marcus Mueller  <znek@mulle-kybernetik.com>

	* README: updated, added .fseventsd TODO

	* FUSEObjectFileSystem.m: renamed all overridden methods due to upgrade
	  of FUSEObjC

	* iTunesFileSystem.m: implemented -fuseOptions, renamed -isLocal to
	  - needsLocalOption

2007-11-22  Marcus Mueller  <znek@mulle-kybernetik.com>

	* iTunesFileSystem.m: implement -isLocal to return YES on
	  Mac OS X 10.5.x due to Leopard's Finder's broken behavior in dealing
	  with FUSE filesystems

	* iTunesFS.xcodeproj/project.pbxproj: promoted to Xcode 3.0 project

2007-10-30  Marcus Mueller  <znek@mulle-kybernetik.com>

	* v1.1.5

	* iPodLibrary.h: expose -mountPoint (for subclassers).

	* iPodLibrary.m: added safeguards in -setLocation: in case content in
	  iTunesDB file is malformed (or in a new scheme we don't understand,
	  yet).

	* JBiPodLibrary.[hm]: new subclass of iPodLibrary which sports the
	  new folder locations of iPod Touch and iPhone.

	* iTunesFileSystem.m: added JBiPodLibrary support. Add additional
	  entries to volume paths of removable devices from new
	  "iPodMountPoints" user default.

2007-08-01  Marcus Mueller  <znek@mulle-kybernetik.com>

	* iTunesLibrary.m: added "Compilations" patch from Mark Wallis which
	  aggregates all albums which have different artists in this folder

	* {*}.lproj/Localizable.strings: added "Compilations"

	* AUTHORS: updated

	* NOTES: updated

	* English.lproj/MainMenu.nib: updated, but still invisible - we
	  probably could use a UI for setting formatters and the like, but
	  I'm still a bit undecided.

2007-07-08  Infinity  <me@infinite-labs.net>

	* {Italian,Spanish}.lproj/Localizable.strings: fixed Italian and
	  Spanish localizations.

2007-07-02  Marcus Mueller  <znek@mulle-kybernetik.com>

	* v1.1.4

	* README: updated defaults section and added "Formatters" section

	* iTunesFSFormatter.[hm]: new formatter object - this is used
	  for formatting all track names for now. Includes ability to provide
	  format strings for number formatters.

	* iTunesTrack.[hm]: deprecated -prettyName, use -name now. Added
	  -extension (and, as a convenience, -ext), -trackNumber and
	  -playlistNumber for formatting purposes. Removed the
	  "DetailedTrackNames" default.

	* iTunesLibrary.m: added new "AlbumsTrackFormat" default for formatting
	  track names in "Albums" and "Songs".

	* iTunesPlaylist.m: added new "PlaylistsTrackFormat" default for
	  formatting track names in "Playlists".

	* FUSEOFS/*: added new FUSEOFS subproject. The idea here is to have
	  a reusable object model for other FUSEObjC based file systems.

	* iTunesFileSystem.[hm]: moved all lookup related stuff to new
	  superclass, FUSEObjectFileSystem.

	* iTunesLibrary.m, iPodLibrary.m, iTunesPlaylist.m, iTunesTrack.m:
	  changed all references of "iTunesFS" to "FUSEOFS".

	* NSArray+Extensions.[hm]: removed obsolete category

	* NSObject+Extensions.[hm]: removed, part of FUSEOFS now.

	* GNUmakefile{,.preamble}: added FUSEOFS

2007-06-14  Marcus Mueller  <znek@mulle-kybernetik.com>

	* v1.1.3

	* README: updated with GNUstep info and new NSUserDefaults description

	* README-GNUstep: added

	* NOTES: added localization hint

	* Info.plist: added all NSUserDefaults

	* iTunesLibrary.[hm]: added new -reloadVirtualMaps public API used
	  by subclassers to call after -reload is done

	* iTunesLibrary.m: if "UseCategories" default is YES, display
	  "Playlists", "Artists" and "Albums" as virtual folders

	* iPodLibrary.m: call -reloadVirtualMaps after -reload, properly
	  parse "Albums" and "Artists" for tracks

	* iTunesTrack.[hm]: remember "Artist" and "Album" for later use

	* NSString+Extensions.m: removed obsolete category methods. Properly
	  escape ":" (0x35) with similar glyph (0xFF1A)

	* {English,German,French,Italian,Spanish,Japanese}.lproj/
	  Localizable.strings: added localized variants of the virtual category
	  folder names

	* English.lproj/MainMenu.gorm: added main interface for GNUstep

	* FUSEObjC-GNUstep/*: added port of FUSEObjC specifically for GNUstep,
	  basically removed all HFS+ and Finder related stuff

	* examples/iTunesMusicLibrary.xml: added new tiny library for users
	  who don't have iTunes around but want to take a look nevertheless

2007-06-08  Marcus Mueller  <znek@mulle-kybernetik.com>

	* iTunesFileSystem.m: fixed typo in -description

	* iTunesLibrary.m: only append iTunes library version number to name if
	  debugging is enabled.

	* Resources/*: moved everything in here to top-level directory

2007-05-31  Marcus Mueller  <znek@mulle-kybernetik.com>

	* v1.1.2

	* iTunesFileSystem.m: inform NSWorkspace about directory changes
	  (doesn't seem to have the desired effect on my system, though).
	  Implemented symbolic link lookup.

	* NSURL+Extensions.[hm]: new category for properly demangling
	  "?" characters in file URLs to "_", as this is what iTunes seems to
	  do

	* NSObject+Extensions.[hm]: added new method -symbolicLinkTarget

	* iTunesLibrary.m: if library contains only one playlist (i.e. Shuffle)
	  skip the playlist in listing and instead show all tracks.

	* iPodLibrary.m: extract "dateModified" and "dateAdded" from iTunesDB
	  and put it into representation dictionary for iTunesTrack to
	  initialize with

	* iTunesTrack.[hm]: Derive FileSystemAttributes from attributes stored
	  in either iTunes or iTunesDB representation. Properly demangle
	  file URL paths before accessing data in hose file system. Return
	  these URL paths as symbolic link targets when asked to. Return
	  NSFileType == NSFileTypeSymbolicLink in case the "SymbolicLinks"
	  user default is true.

	* iTunesFileSystem.m, iTunesLibrary.m, iTunesPlaylist.m, iTunesTrack.m:
	  added custom -description to aid in debugging

2007-05-29  Marcus Mueller  <znek@mulle-kybernetik.com>

	* v1.1.1

	* NOTES: added some Spotlight info

	* README: updated

	* NSObject+Extensions.[hm]: new iTunesFS lookup methods which
	  dramatically simplify the implementation

	* iTunesFileSystem.m: added new "iTunesFileSystemDebugEnabled" and
	  "NoIPods" defaults (described in README). Added some debug output,
	  when iTunesFileSystemDebugEnabled == YES. All paths will be mangled
	  now before they are being processed - using the "NoIPods" default
	  this leads to the whole "libraries" hierarchy to be hidden, as it's
	  not useful to display it then.
	  Implemented new lookup algorithm for looking up "generic" objects
	  for performing all file system related operations on. Call -close
	  on libraries whose mount points are about to vanish.

	* iTunesTrack.[hm]: minor renaming, implemented file system operations
	  as part of the new lookup API

	* iTunesPlaylist.m: implemented lookup API

	* iTunesLibrary.[hm]: removed quite a bit of the old API, implemented
	  new lookup API. Added new -close method which can be called in
	  case a file system will be unmounted.

2007-05-24  Marcus Mueller  <znek@mulle-kybernetik.com>

	* v1.1.0

	* iTunesTrack.[hm]: remove name (including playlist index) from
	  track, instead provide just the prettyName stub. Directly access
	  NSUserDefaults for finding out about whether detailed track names
	  are requested - and subsequently removed the public API for setting
	  that. Added initializer for iPodLibrary representation, renamed the
	  old initializer to better reflect what's happening.

	* iTunesPlaylist.[hm]: store the trackNames locally, including the
	  proper playlist index. Changed API to initialize using the
	  respective library. Use this library now to retrieve tracks via
	  their ID. Added initializers similar to iTunesTrack.

	* iTunesLibrary.[hm]: create a cache for tracks which works
	  universally in all playlists. Doing so reduces memory footprint
	  significantly. Changed API to allow access to cached tracks via
	  their ID. Added API for -mountPoint, which is required for the
	  iPodLibrary subclass.

	* iPodLibrary.[hm]: New subclass of iTunesLibrary, representing the
	  iTunesDB which is found on iPods.

	* iTunesFileSystem.[hm]: Added API for removing libraries. The
	  iTunesFileSystem registers itself for distributed workspace
	  notifications regarding the mounting/unmounting of removable
	  devices. If such a device is found and in fact is an iPod, its
	  library will be exposed in a fashion similar to that of the
	  iTunes Library.

	* NSString+Extensions.[hm]: added new method for dealing with
	  initializing NSStrings with little endian unicode representations.

2007-05-23  Marcus Mueller  <znek@mulle-kybernetik.com>

	* v1.0.4

	* iTunesTrack.m: added safeguard against nameless tracks - not as
	  impossible to encounter as I'd hoped.

	* iTunesPlaylist.m: in case playlists sport track ids which have
	  disappeared from the library, skip the creation of those tracks and
	  adjust playlist index accordingly. This effect has been observed
	  with Podcasts only, yet.

	* create-itunesfs-binary-package.sh: remove 'Version' file from .dmg

	* README: updated

	* v1.0.3

	* ChangeLog: added

	* Watchdog.[hm]: added kqueue observer capable of reloading libraries
	  in case their underlying database files changed.

	* NSArray+Extensions.[hm]: added category for all things specific to
	  path handling, enhances code readability in most places.

	* iTunesFileSystem.[hm]: Added new top level hierarchy, enabling
	  more than one library to be displayed beneath the root directory.
	  The intended purpose is to also allow traversal of mounted iPods
	  in the similar fashion as is with the iTunes library.

	* iTunesLibrary.[hm]: Library exposes its name and associated icon now.
	  Also, the library uses the shared watchdog to watch its database
	  file and reload upon change.

	* iTunesTrack.[hm], iTunesPlaylist.[hm]: added copyright notice.

	* NSString+Extensions.m: removed debug log message.
