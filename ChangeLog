2007-05-29  Marcus Mueller  <znek@mulle-kybernetik.com>

	* v1.1.1 (IN PROGRESS)

	* NOTES: added some Spotlight info

	* README: updated

	* NSObject+Extensions.[hm]: new iTunesFS lookup methods which
	  dramatically simplify the implementation

	* iTunesFileSystem.m: added new "iTunesFileSystemDebugEnabled" and
	  "NoIPods" defaults (described in README). Added some debug output,
	  when iTunesFileSystemDebugEnabled == YES. All paths will be mangled
	  now before they are being processed - using the "NoIPods" default
	  this leads to the whole "libraries" hierarchy to be hidden, as it's
	  not useful to display it then.
	  Implemented new lookup algorithm for looking up "generic" objects
	  for performing all file system related operations on. Call -close
	  on libraries whose mount points are about to vanish.

	* iTunesTrack.[hm]: minor renaming, implemented file system operations
	  as part of the new lookup API

	* iTunesPlaylist.m: implemented lookup API

	* iTunesLibrary.[hm]: removed quite a bit of the old API, implemented
	  new lookup API. Added new -close method which can be called in
	  case a file system will be unmounted.

2007-05-24  Marcus Mueller  <znek@mulle-kybernetik.com>

	* v1.1.0

	* iTunesTrack.[hm]: remove name (including playlist index) from
	  track, instead provide just the prettyName stub. Directly access
	  NSUserDefaults for finding out about whether detailed track names
	  are requested - and subsequently removed the public API for setting
	  that. Added initializer for iPodLibrary representation, renamed the
	  old initializer to better reflect what's happening.

	* iTunesPlaylist.[hm]: store the trackNames locally, including the
	  proper playlist index. Changed API to initialize using the
	  respective library. Use this library now to retrieve tracks via
	  their ID. Added initializers similar to iTunesTrack.

	* iTunesLibrary.[hm]: create a cache for tracks which works
	  universally in all playlists. Doing so reduces memory footprint
	  significantly. Changed API to allow access to cached tracks via
	  their ID. Added API for -mountPoint, which is required for the
	  iPodLibrary subclass.

	* iPodLibrary.[hm]: New subclass of iTunesLibrary, representing the
	  iTunesDB which is found on iPods.

	* iTunesFileSystem.[hm]: Added API for removing libraries. The
	  iTunesFileSystem registers itself for distributed workspace
	  notifications regarding the mounting/unmounting of removable
	  devices. If such a device is found and in fact is an iPod, its
	  library will be exposed in a fashion similar to that of the
	  iTunes Library.

	* NSString+Extensions.[hm]: added new method for dealing with
	  initializing NSStrings with little endian unicode representations.

2007-05-23  Marcus Mueller  <znek@mulle-kybernetik.com>

	* v1.0.4

	* iTunesTrack.m: added safeguard against nameless tracks - not as
	  impossible to encounter as I'd hoped.

	* iTunesPlaylist.m: in case playlists sport track ids which have
	  disappeared from the library, skip the creation of those tracks and
	  adjust playlist index accordingly. This effect has been observed
	  with Podcasts only, yet.

	* create-itunesfs-binary-package.sh: remove 'Version' file from .dmg

	* README: updated

	* v1.0.3

	* ChangeLog: added

	* Watchdog.[hm]: added kqueue observer capable of reloading libraries
	  in case their underlying database files changed.

	* NSArray+Extensions.[hm]: added category for all things specific to
	  path handling, enhances code readability in most places.

	* iTunesFileSystem.[hm]: Added new top level hierarchy, enabling
	  more than one library to be displayed beneath the root directory.
	  The intended purpose is to also allow traversal of mounted iPods
	  in the similar fashion as is with the iTunes library.

	* iTunesLibrary.[hm]: Library exposes its name and associated icon now.
	  Also, the library uses the shared watchdog to watch its database
	  file and reload upon change.

	* iTunesTrack.[hm], iTunesPlaylist.[hm]: added copyright notice.

	* NSString+Extensions.m: removed debug log message.
